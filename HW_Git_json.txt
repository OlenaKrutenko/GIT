Create an external repository with the name JSON and clone the JSON repository to the local computer - git clone https://github.com/OlenaKrutenko/JSON.git

Внутри локального JSON создать файл “new.json” -  vim new.json
{   "first_name": "Olena",
	"last_name":"Krutenko",
	"number_of_pet":0,
	"salary":600
	
}

 
Add file: -  git add new.json

 git status
 
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	new file:   new.json

Commit :  git commit -m "create new.json"
Send the file on the external GitHub repositoty:  git push

 git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

Edit the contents of the file  “new.json" - 
 vim new.json
 
 git status
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   new.json

no changes added to commit (use "git add" and/or "git commit -a")

Send changes to the external repository:   git add new.json

 git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	modified:   new.json

 git commit -m "edit new.json"
 
[main cdb1ab3] edit new.json
 1 file changed, 4 insertions(+), 1 deletion(-)
 
 
 Send Changes ti the external repositiry: -  git push

Create file  vim preferences.json

{ "favorite_film":"Friends",
       "favorite_food": "vegetable_salad",
       "favorite_season":"spring",
       "favorite_country":"Spain"
}       
Create file vim skills.json
 { "type_of_testing": "functional and nonfunctional",
  "documention_of_testing": "check- list",
  "documention_of_testing": "bug_report",
  "documention_of_testing": "test_cases",
 " skills": "postman",
 "skills":"git",
 "skills":"chai"
}
 git status
On branch main
Your branch is up to date with 'origin/main'.

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	preferences.json
	skills.json

nothing added to commit but untracked files present (use "git add" to track)

Send 2 files to an external repository at once   - git add . 

 git status
 
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	new file:   preferences.json
	new file:   skills.json
	

Send to an external repository      - git commit -m "add preference.json"
 
 git push


 vim skills.json
 
git commit -am "add modify skills.json"

 git push
 
 - Create a file on the web interface bug_report.json.
  - Create  Commit changes (save) changes to the web interface.
  -  Modify the file on the web interface bug_report.json, add a bug report in the format JSON.
  -  Create Commit changes (save) changes to the web interface.

Synchronize external and local repository JSON:
 git fetch
 
remote: Enumerating objects: 10, done.
remote: Counting objects: 100% (10/10), done.
remote: Compressing objects: 100% (8/8), done.
remote: Total 9 (delta 4), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (9/9), 2.55 KiB | 869.00 KiB/s, done.
From https://github.com/OlenaKrutenko/JSON
   2c22ef2..09417ab  main       -> origin/main
   
 git pull
 
 
Updating 2c22ef2..09417ab
Fast-forward
 bug_report.json | 20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)
 create mode 100644 bug_report.json
 
 git status
 
On branch main
Your branch is up to date with 'origin/main'.

